[ { "title": "Android Camera2 Fundamentals", "url": "/posts/Android-Camera2-Basics/", "categories": "Android, Java, Basic", "tags": "Android, Java, Fundamental", "date": "2021-04-15 13:29:00 +0800", "snippet": "Android Camera2使用过程中的总结:A. Camera2 常用类:1. CameraManager CameraManager是Camera2中新加入的类，用来管理摄像头相关的所有信息/内容，通过getSystemService(Context.CAMERA_SERVICE)实例化。Docs: A system service manager for detecting, characterizing, and connecting to CameraDevices. CameraCharacteristics getCameraCharacteristics(S..." }, { "title": "Python Fundamentals", "url": "/posts/Python-Fundamentals/", "categories": "Basic, Python", "tags": "Python, Fundamental", "date": "2020-12-14 14:00:00 +0800", "snippet": "Python知识点总结+复习(长期更新)A. 基础知识1. Python Built-in Type Python中定义变量无需声明类型 int: 无取值范围，有正负 float：基本和java中float一样 complex：复数，(real part) + (imaginary part)j，很少用 str：基本和java中string一样，但是定义时用’ / “ / ‘&#39;’均可 list：有序，基本和java中array一样，区别在list中的item不限制是否同一类型 truple：基本和l..." }, { "title": "Threads and Concurrent", "url": "/posts/Threads-And-Concurrent/", "categories": "Basic, Java", "tags": "Java, Fundamental", "date": "2020-12-02 14:00:00 +0800", "snippet": "并发和线程(看心情更新)A. 基础知识1. 线程(thread)和进程(process) 线程是操作系统能够进行运算调度的最小单位，大部分情况下，它被包含在进程之中，是进程中的实际运作单位 进程是指计算机中已运行的程序 多进程vs多线程：本质区别在多线程共享数据，多进程每个进程拥有自己的一整套变量2. 创建新线程常见方法 Method1: 定义Thread的子类(extends Thread)，并override其run()方法，然后new一个实例，并用start()启动class Thread extends Thread { ..... @Override public..." }, { "title": "Computer Networks Fundamentals", "url": "/posts/Computer-Networks-QA/", "categories": "Basic, Computer Networks", "tags": "Networks, Fundamental", "date": "2020-11-28 11:00:00 +0800", "snippet": "Computer Networks知识点总结(长期更新)A. 基本内容1. 体系结构TCP/IP 五层结构 应用层(Application Layer) -is where network applications and their application-layer protocols reside-主要通过应用进程间的通信交互来完成网络应用功能-其交互的数据单元(packet)称为报文(message)-Protocols: HTTP, FTP, SMTP, DNS 传输层(Transport Layer) -transports..." }, { "title": "Java Fundamentals", "url": "/posts/Java-Fundamentals/", "categories": "Basic, Java", "tags": "Java, Fundamental", "date": "2020-11-12 14:00:00 +0800", "snippet": "Java知识点总结+复习(长期更新)JavaSE部分A. 基础知识1. 面向过程和面向对象的区别面向过程(Progress oriented)优点：性能更高，因为调用类需要实例化，更消耗资源。单片机、嵌入式、Linux/Unix开发常用，因为性能是最重要的缺点：没有面向对象易维护、易复用、易扩展面向对象(Object oriented)优点：易维护、易复用、易扩展，有封装、继承、多态的特性，可以设计出低耦合系统，使系统更加灵活和易于维护缺点：性能较低2. Java面向对象三大特点：封装、继承、多态封装(Encapsulation)封装把一个对象的属性私有化，同时提供一些可以被外界访问的属..." } ]
